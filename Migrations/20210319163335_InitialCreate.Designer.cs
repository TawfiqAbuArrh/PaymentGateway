// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentGateway_Task.Models.DB;

namespace PaymentGateway_Task.Migrations
{
    [DbContext(typeof(PaymentGatewayContext))]
    [Migration("20210319163335_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.Admin", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Passwords")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.LoginTokens", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TokenExpiration")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TokenTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Token")
                        .HasName("PK_Token");

                    b.HasIndex("UserId");

                    b.ToTable("LoginTokens");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Transaction_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<string>("TransactionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TransactionTypeId")
                        .HasColumnName("TransactionType_ID")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.TransactionTypes", b =>
                {
                    b.Property<int>("TransactionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionType_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransactionTypeName")
                        .IsRequired()
                        .HasColumnName("TransactionType_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TransactionTypeId")
                        .HasName("PK_TransactionType_ID");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdminApproval")
                        .HasColumnType("bit");

                    b.Property<decimal>("CreditBalance")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Pdf")
                        .HasColumnName("PDF")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PdfName")
                        .HasColumnName("PDF_Name")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserTypeId")
                        .HasColumnName("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.UsersType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .HasColumnName("UserType_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserTypeId");

                    b.ToTable("UsersType");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.LoginTokens", b =>
                {
                    b.HasOne("PaymentGateway_Task.Models.DB.Users", "User")
                        .WithMany("LoginTokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_ID");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.Transaction", b =>
                {
                    b.HasOne("PaymentGateway_Task.Models.DB.TransactionTypes", "TransactionType")
                        .WithMany("Transaction")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("FK_TransactionType_ID");
                });

            modelBuilder.Entity("PaymentGateway_Task.Models.DB.Users", b =>
                {
                    b.HasOne("PaymentGateway_Task.Models.DB.UsersType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK_UsersType")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
